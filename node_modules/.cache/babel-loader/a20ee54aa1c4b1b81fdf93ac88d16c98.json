{"ast":null,"code":"var _jsxFileName = \"/home/ncoded8/Documents/NikolaReact/UdemyProject/blog/src/components/UserHeader.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.userId);\n  }\n\n  render() {\n    const user = this.props.users.find(user => user.id === this.props.userId);\n\n    if (!user) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"UserHeader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users\n  };\n};\n\nexport default connect(null, {\n  fetchUser\n})(UserHeader);","map":{"version":3,"sources":["/home/ncoded8/Documents/NikolaReact/UdemyProject/blog/src/components/UserHeader.js"],"names":["React","connect","fetchUser","UserHeader","Component","componentDidMount","props","userId","render","user","users","find","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,SAAX,CAAqB,KAAKI,KAAL,CAAWC,MAAhC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,IAAjB,CAAuBF,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAY,KAAKN,KAAL,CAAWC,MAAvD,CAAb;;AAEA,QAAI,CAACE,IAAL,EAAW;AACT,aAAO,IAAP;AACD;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAZsC;;AAezC,MAAMI,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEJ,IAAAA,KAAK,EAAEI,KAAK,CAACJ;AAAf,GAAP;AACD,CAFD;;AAIA,eAAeT,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA6BC,UAA7B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUser } from \"../actions\";\n\nclass UserHeader extends React.Component {\n  componentDidMount() {\n    this.props.fetchUser(this.props.userId);\n  }\n\n  render() {\n    const user = this.props.users.find((user) => user.id === this.props.userId);\n\n    if (!user) {\n      return null;\n    }\n    return <div>UserHeader</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { users: state.users };\n};\n\nexport default connect(null, { fetchUser })(UserHeader);\n"]},"metadata":{},"sourceType":"module"}